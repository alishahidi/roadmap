"use strict";(self.webpackChunkroadmap=self.webpackChunkroadmap||[]).push([[7704],{5382:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"02-api-design","title":"API Design & Development","description":"The Application Programming Interface (API) is the backbone of modern software. For a senior backend engineer, mastering API design is not just about exposing data; it\'s about creating a clear, consistent, and secure contract that empowers consumers of your service.","source":"@site/docs/02-api-design.mdx","sourceDirName":".","slug":"/api-design","permalink":"/roadmap/docs/api-design","draft":false,"unlisted":false,"editUrl":"https://github.com/alishahidi/roadmap/tree/main/docs/02-api-design.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"02-api-design","slug":"/api-design","sidebar_position":2,"title":"API Design & Development"},"sidebar":"roadmapSidebar","previous":{"title":"Foundations of Backend Engineering","permalink":"/roadmap/docs/foundations"},"next":{"title":"System Architecture & Design","permalink":"/roadmap/docs/system-architecture"}}');var i=s(4848),t=s(8453);const a={id:"02-api-design",slug:"/api-design",sidebar_position:2,title:"API Design & Development"},o=void 0,c={},l=[{value:"REST APIs",id:"rest-apis",level:2},{value:"GraphQL",id:"graphql",level:2},{value:"Solving the N+1 Problem",id:"solving-the-n1-problem",level:3},{value:"API Security Best Practices",id:"api-security-best-practices",level:2},{value:"Authentication &amp; Authorization",id:"authentication--authorization",level:3},{value:"Testing Strategies for APIs",id:"testing-strategies-for-apis",level:2},{value:"Testing Pyramid",id:"testing-pyramid",level:3},{value:"Types of API Testing",id:"types-of-api-testing",level:3},{value:"Testing Best Practices",id:"testing-best-practices",level:3},{value:"API Documentation &amp; Testing Tools",id:"api-documentation--testing-tools",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The Application Programming Interface (API) is the backbone of modern software. For a senior backend engineer, mastering API design is not just about exposing data; it's about creating a clear, consistent, and secure contract that empowers consumers of your service."}),"\n",(0,i.jsx)(n.h2,{id:"rest-apis",children:"REST APIs"}),"\n",(0,i.jsx)(n.p,{children:"REST (Representational State Transfer) has been the dominant architectural style for web APIs for years because it's built on the same principles as the web itself: simplicity, scalability, and statelessness."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource-Based Naming:"})," A core tenet of REST is thinking in terms of resources. URIs should identify resources, not actions.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Good:"})," ",(0,i.jsx)(n.code,{children:"/users/123/orders"})," (Get all orders for user 123)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bad:"})," ",(0,i.jsx)(n.code,{children:"/getOrdersForUser?userId=123"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use HTTP Verbs Correctly:"})," Use the semantics of HTTP methods to express actions on resources.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GET"}),": Retrieve a resource."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"POST"}),": Create a new resource."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PUT"}),": Replace an existing resource entirely."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PATCH"}),": Partially update an existing resource."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DELETE"}),": Remove a resource."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Versioning:"})," As your API evolves, you'll inevitably need to introduce breaking changes. A versioning strategy is essential for a smooth transition for your clients. URI versioning (",(0,i.jsx)(n.code,{children:"/api/v1/..."}),") is the most common and explicit approach."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Deep Dive: Resources",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"Microsoft REST API Guidelines"})]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://www.freecodecamp.org/news/how-to-design-a-great-api-with-these-10-api-design-best-practices/",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"How to Design a Great API"})," (FreeCodeCamp)"]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://swagger.io/specification/",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"OpenAPI Specification"})]})}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:":::"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"graphql",children:"GraphQL"}),"\n",(0,i.jsx)(n.p,{children:"GraphQL is a query language for your API that gives clients the power to ask for exactly what they need and nothing more. It's a powerful alternative to REST, especially for applications with complex data requirements or diverse clients (e.g., web and mobile)."}),"\n",(0,i.jsx)(n.h3,{id:"solving-the-n1-problem",children:"Solving the N+1 Problem"}),"\n",(0,i.jsxs)(n.p,{children:['A classic issue with REST is under-fetching, which often leads to the "N+1" query problem. Imagine fetching a list of authors (',(0,i.jsx)(n.code,{children:"1"})," query) and then fetching the books for each of those ",(0,i.jsx)(n.code,{children:"N"})," authors (",(0,i.jsx)(n.code,{children:"N"})," queries)."]}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant Client\r\n    participant Server (REST)\r\n    participant Database\r\n\r\n    Client->>Server (REST): GET /authors\r\n    Server (REST)->>Database: SELECT * FROM authors\r\n    Database--\x3e>Server (REST): N authors\r\n    Server (REST)--\x3e>Client: List of N authors\r\n\r\n    loop For Each Author\r\n        Client->>Server (REST): GET /authors/{id}/books\r\n        Server (REST)->>Database: SELECT * FROM books WHERE author_id = {id}\r\n        Database--\x3e>Server (REST): Books\r\n        Server (REST)--\x3e>Client: List of books\r\n    end\r\n    Note right of Client: Total N+1 queries"}),"\n",(0,i.jsx)(n.p,{children:"GraphQL solves this by fetching all the required information in a single, declarative query."}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant Client\r\n    participant Server (GraphQL)\r\n    participant Database\r\n\r\n    Client->>Server (GraphQL): query { authors { name, books { title } } }\r\n    Server (GraphQL)->>Database: Executes optimized query (e.g., with a JOIN)\r\n    Database--\x3e>Server (GraphQL): Authors and their books\r\n    Server (GraphQL)--\x3e>Client: Single response with all data\r\n    Note right of Client: Total 1 query"}),"\n",(0,i.jsx)(n.admonition,{title:"Deep Dive: Resources",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://graphql.org/learn/",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"Introduction to GraphQL"})," (Official Site)"]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://www.youtube.com/watch?v=ed8SzALpx1Q",children:["\u25b6\ufe0f ",(0,i.jsx)(n.strong,{children:"GraphQL Full Course"})," (YouTube)"]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://www.apollographql.com/",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"Apollo GraphQL Platform"})]})}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:":::"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"api-security-best-practices",children:"API Security Best Practices"}),"\n",(0,i.jsx)(n.p,{children:"Securing your APIs is critical. An insecure API can expose sensitive data and put your entire system at risk."}),"\n",(0,i.jsx)(n.h3,{id:"authentication--authorization",children:"Authentication & Authorization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication:"})," Verifying who a user is."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authorization:"})," Determining what an authenticated user is allowed to do."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"OAuth 2.0"}),' is the industry-standard protocol for authorization. The "Authorization Code" flow is the most common and secure for web applications.']}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant User\r\n    participant ClientApp as Your Application\r\n    participant AuthServer as Authorization Server\r\n    participant ApiServer as Your API Server\r\n\r\n    User->>ClientApp: Log in\r\n    ClientApp->>AuthServer: Redirect user with client_id & scope\r\n    User->>AuthServer: Enters credentials\r\n    AuthServer--\x3e>ClientApp: Redirect with Authorization Code\r\n    ClientApp->>AuthServer: Exchange Authorization Code for Access Token\r\n    AuthServer--\x3e>ClientApp: Returns Access Token & Refresh Token\r\n    ClientApp->>ApiServer: Call API with Access Token\r\n    ApiServer->>AuthServer: Validate Access Token (optional, often via JWT signature)\r\n    ApiServer--\x3e>ClientApp: Return requested data"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"JSON Web Tokens (JWT)"})," are a common way to implement stateless authentication. The server creates a signed token containing user claims, and the client sends this token with each request. The server can verify the token's signature without needing to store session state."]}),"\n",(0,i.jsx)(n.admonition,{title:"Deep Dive: Resources",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://www.oauth.com/",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"OAuth 2.0 Simplified"})]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://jwt.io/introduction",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"JWT.io Introduction"})]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://cheatsheetseries.owasp.org/API_Security_Cheat_Sheet.html",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"API Security Checklist"})," (OWASP)"]})}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:":::"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"testing-strategies-for-apis",children:"Testing Strategies for APIs"}),"\n",(0,i.jsx)(n.p,{children:"A senior developer must ensure code quality through comprehensive testing. APIs require special attention due to their role as contracts between systems."}),"\n",(0,i.jsx)(n.h3,{id:"testing-pyramid",children:"Testing Pyramid"}),"\n",(0,i.jsx)(n.mermaid,{value:'graph TD\r\n    subgraph "Testing Pyramid"\r\n        A[End-to-End Tests <br/> Few, Slow, Expensive];\r\n        B[Integration Tests <br/> Some, Medium Speed];\r\n        C[Unit Tests <br/> Many, Fast, Cheap];\r\n    end\r\n    C --\x3e B;\r\n    B --\x3e A;'}),"\n",(0,i.jsx)(n.h3,{id:"types-of-api-testing",children:"Types of API Testing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unit Tests:"})," Test individual functions and methods in isolation. Mock external dependencies."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration Tests:"})," Test how your code interacts with external systems (databases, other services)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Contract Tests:"})," Ensure APIs meet their documented contracts. Tools like ",(0,i.jsx)(n.strong,{children:"Pact"})," enable consumer-driven contract testing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"End-to-End Tests:"})," Test the complete user workflow through the system. Expensive but catch integration issues."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"testing-best-practices",children:"Testing Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test-Driven Development (TDD):"})," Write tests before implementation. Red \u2192 Green \u2192 Refactor cycle."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Arrange-Act-Assert (AAA) Pattern:"})," Structure tests clearly:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Arrange:"})," Set up test data and mocks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Act:"})," Execute the code under test"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Assert:"})," Verify the results"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example: Testing a REST API endpoint"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Jest/Node.js example\r\ndescribe('POST /api/users', () => {\r\n  it('should create a new user', async () => {\r\n    // Arrange\r\n    const userData = { name: 'John Doe', email: 'john@example.com' };\r\n    const mockUser = { id: 1, ...userData };\r\n    jest.spyOn(userService, 'create').mockResolvedValue(mockUser);\r\n\r\n    // Act\r\n    const response = await request(app)\r\n      .post('/api/users')\r\n      .send(userData);\r\n\r\n    // Assert\r\n    expect(response.status).toBe(201);\r\n    expect(response.body).toEqual(mockUser);\r\n    expect(userService.create).toHaveBeenCalledWith(userData);\r\n  });\r\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"api-documentation--testing-tools",children:"API Documentation & Testing Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OpenAPI/Swagger:"})," Document your APIs and generate interactive documentation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Postman/Insomnia:"})," Manual API testing and automation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Newman:"})," Run Postman collections in CI/CD pipelines."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Deep Dive: Resources",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://martinfowler.com/articles/practical-test-pyramid.html",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"The Practical Test Pyramid"})," by Martin Fowler"]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://www.youtube.com/watch?v=QCif_-r8eK4",children:["\u25b6\ufe0f ",(0,i.jsx)(n.strong,{children:"Test-Driven Development"})," (Video)"]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://docs.pact.io/",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"Contract Testing with Pact"})]})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://assertible.com/blog/13-things-you-should-do-to-build-better-restful-web-apis",children:["\ud83d\udcc4 ",(0,i.jsx)(n.strong,{children:"API Testing Best Practices"})]})}),"\n"]})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);